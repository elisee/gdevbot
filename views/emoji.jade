extends layout

block title
  | Emoji code

block content
  style.
    section {
      padding-bottom: 1.5em;
      border-bottom: 1px solid #ccc;
    }

    section > .Icon {
      float: right;
      padding-left: 0.5em;
    }

    pre { z-index: -1; }
    pre img { width: 36px; vertical-align: bottom; }

    section { clear: both; }

    .Playground .Buttons img {
      width: 36px;
      height: 36px;
      margin: 0.125em;
      cursor: pointer;
    }

    .Playground textarea {
      width: 100%;
      min-height: 150px;
      padding: 0.5em;
      outline: none;
    }

  p.
    A tweet-size scripting language for a tweet-based game making tool.

  section.Playground
    h2 Playground

    .Buttons
      != imgEmoji(":sunrise:")
      != imgEmoji(":curly_loop:")

      != imgEmoji(":penguin:")

      != imgEmoji(":triangular_flag_on_post:")
      != imgEmoji(":car:")

      != imgEmoji(":o:")
      != imgEmoji(":arrows_clockwise:")

      != imgEmoji(":key:")

      != imgEmoji(":baggage_claim:")

      != imgEmoji(":question:")

      != imgEmoji(":fast_forward:")
      != imgEmoji(":rewind:")

      != imgEmoji(":scissors:")

      != imgEmoji(":point_up:")
      != imgEmoji(":wave:")

    textarea
    button#MakeScriptButton Generate tweetable script
    |  
    select#ExampleSelect
      option (Pick an example)
      option(value="setPositionOnSunrise") Set actor position on sunrise
      option(value="moveRightwards") Move actor to the right continously
      option(value="moveUpThenStop") Move up then stop
    script(src="js/playground.js")

  section
    .Icon
      != imgEmoji(":sunrise:")
      |  
      != imgEmoji(":curly_loop:")
    h2 Init, Once, Always
    

    p.
      By default, your code will be executed a single time as soon as the game is loaded.
      This is useful for global initialization code that isn't linked to any actor.

    p.
      Code located after the sunrise emoji will be executed once for each actor it is attached to,
      when the actor is instantiated or when the script gets attached to it.

    p.
      Code located after the curly loop emoji will be executed every frame for each actor it is attached to.



  section
    .Icon
      != imgEmoji(":penguin:")
    h2 Current actor
    

    p.
      A single script can be attached on a multitude of actors.
      The penguin emoji represents the actor the script is currently dealing with.

  section
    .Icon
      != imgEmoji(":triangular_flag_on_post:")
      |  
      != imgEmoji(":car:")
    h2 Position, Move
    

    p.
      Use the flag to set or get an actor's position.

    pre
      != imgEmoji(":triangular_flag_on_post:")
      mark
        != imgEmoji(":penguin:")
      |  
      mark 20
      |  
      mark 30

    p.
      Use the car to move an actor by a certain offset.

    pre
      != imgEmoji(":car:")
      mark
        != imgEmoji(":penguin:")
      |  
      mark 10
      |  
      mark -5

  section
    .Icon
      != imgEmoji(":o:")
      |  
      != imgEmoji(":arrows_clockwise:")
    h2 Angle, Rotate

    p.
      Use the circle to set or get an actor's angle.

    pre
      != imgEmoji(":o:")
      mark
        != imgEmoji(":penguin:")
      |  
      mark 45

    p.
      Use the clockwise arrows to rotate an actor.

    pre
      != imgEmoji(":arrows_clockwise:")
      mark
        != imgEmoji(":penguin:")
      |  
      mark 5

  section
    .Icon
      != imgEmoji(":key:")
    h2 Key
    

    p.
      The key lets you access properties of an object.

    p.
      For instance, you can access the x or y component of a position.

    pre
      mark
        != imgEmoji(":triangular_flag_on_post:")
      mark
        != imgEmoji(":penguin:")
      != imgEmoji(":scissors:")
      != imgEmoji(":key:")
      mark
        | x

    p.
      See below for an explanation about the scissors and why they're required.

  section
    .Icon
      != imgEmoji(":baggage_claim:")
    h2 Assignment
    

    p.
      You can assign values to properties:

    pre
      != imgEmoji(":baggage_claim:")
      mark
        != imgEmoji(":penguin:")
      != imgEmoji(":key:")
      |  
      mark prop
      |  
      mark 5

    p.
      A value can be any expression and you can use common arithmetic operators.

  section
    .Icon
      != imgEmoji(":question:")
    h2 Condition
    

    p.
      Only execute the statement right after if the condition turns out to be true.

    pre
      != imgEmoji(":question:")
      mark condition
      |  
      mark statement

    p.
      You can use common comparison operators.

  section
    .Icon
      != imgEmoji(":fast_forward:")
      |  
      != imgEmoji(":rewind:")
    h2 Code block
    

    p.
      Group statements that should be affected by a condition. Or just because it's pretty.

  section
    .Icon
      != imgEmoji(":scissors:")
    h2 End of expression
    

    p.
      Since emoji code doesn't use parentheses to delimit expressions,
      you will sometime need to use the scissors to explicitly mark the end of an expression.

    p.
      If we didn't use the scissors in the Key example above, the code would be interpreted by
      the engine to mean "position of the property x of the penguin", instead of "property x
      of the position of the penguin".

  section
    .Icon
      != imgEmoji(":point_up:")
      |  
      != imgEmoji(":wave:")
    h2 Touch position, touch delta

    p.
      The pointing finger represents the touch position on touch devices,
      or the mouse position while the left button is pressed on other devices.

    p.
      You can use it to make an actor follow your pointer:

    pre
      != imgEmoji(":curly_loop:")
      != imgEmoji(":triangular_flag_on_post:")
      != imgEmoji(":penguin:")
      != imgEmoji(":point_up:")
      != imgEmoji(":key:")
      | x
      != imgEmoji(":point_up:")
      != imgEmoji(":key:")
      | y

    p.
      The waving hand represents the movement of the finger/pointing device
      that happened between the previous frame and the current one.

    p.
      You can use it to drag an actor with your pointer:

    pre
      != imgEmoji(":curly_loop:")
      != imgEmoji(":triangular_flag_on_post:")
      != imgEmoji(":penguin:")
      != imgEmoji(":wave:")
      != imgEmoji(":key:")
      | x
      != imgEmoji(":wave:")
      != imgEmoji(":key:")
      | y
